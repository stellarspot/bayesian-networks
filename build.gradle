plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.0"
    id 'application'
}

project.ext.kotlin_version = '1.3.0'
project.ext.openrndrVersion = "0.3.30"
project.ext.deeplearning4j_version = "1.0.0-beta3"
project.ext.slf4j_version = "1.7.25"
project.ext.logback_version = "1.2.3"

repositories {
    jcenter()
    maven {
        url = "https://dl.bintray.com/openrndr/openrndr/"
    }
}

switch (org.gradle.internal.os.OperatingSystem.current()) {
    case org.gradle.internal.os.OperatingSystem.WINDOWS:
        project.ext.openrndrOS = "windows"
        break
    case org.gradle.internal.os.OperatingSystem.LINUX:
        project.ext.openrndrOS = "linux-x64"
        break
    case org.gradle.internal.os.OperatingSystem.MAC_OS:
        project.ext.openrndrOS = "macos"
        break
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile 'junit:junit:4.11'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    compile "org.deeplearning4j:deeplearning4j-core:$deeplearning4j_version"
    compile "org.nd4j:nd4j-native-platform:$deeplearning4j_version"

    runtime "org.openrndr:openrndr-gl3:$openrndrVersion"
    runtime "org.openrndr:openrndr-gl3-natives-$openrndrOS:$openrndrVersion"
    compile "org.openrndr:openrndr-core:$openrndrVersion"
    compile "org.openrndr:openrndr-svg:$openrndrVersion"
    compile "org.openrndr:openrndr-animatable:$openrndrVersion"
    compile "org.openrndr:openrndr-extensions:$openrndrVersion"
    compile "org.openrndr:openrndr-filter:$openrndrVersion"
    compile "org.openrndr:openrndr-ffmpeg:$openrndrVersion"

    compile "org.slf4j:slf4j-api:$slf4j_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "ch.qos.logback:logback-core:$logback_version"


}

mainClassName = 'bayesian.sample.SampleKt'
